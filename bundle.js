!function(n){var t={};function c(e){if(t[e])return t[e].exports;var Q=t[e]={i:e,l:!1,exports:{}};return n[e].call(Q.exports,Q,Q.exports,c),Q.l=!0,Q.exports}c.m=n,c.c=t,c.d=function(n,t,e){c.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,t){if(1&t&&(n=c(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(c.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var Q in n)c.d(e,Q,function(t){return n[t]}.bind(null,Q));return e},c.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(t,"a",t),t},c.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},c.p="",c(c.s=5)}([function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(1);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(3)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzPzUzZDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxDQUFvRzs7QUFFMUgsNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLENBQW1EOztBQUV4RTs7QUFFQSxHQUFHLEtBQVUsRUFBRSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, "@keyframes blink {\\n  0% {\\n    opacity: 1; }\\n  70% {\\n    opacity: 1; }\\n  75% {\\n    opacity: 0; }\\n  95% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1; } }\\n\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box; }\\n\\nhtml,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n  background: linear-gradient(to bottom, #000a3f 50%, #001cb9 100%);\\n  font-size: 20px; }\\n\\n.container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%; }\\n  .container .container_btn-start,\\n  .container .container_btn-clearTimeout,\\n  .container .container_btn-newGame {\\n    position: absolute;\\n    top: 20%;\\n    left: 10%;\\n    background: linear-gradient(to bottom, #000a3f 5%, #001cb9 100%);\\n    border-radius: 38px;\\n    border: 2px solid white;\\n    cursor: pointer;\\n    color: white;\\n    font-size: 1rem;\\n    padding: 10px 20px;\\n    text-decoration: none; }\\n    .container .container_btn-start:hover,\\n    .container .container_btn-clearTimeout:hover,\\n    .container .container_btn-newGame:hover {\\n      background: linear-gradient(to bottom, #001cb9 5%, #000a3f 100%); }\\n    .container .container_btn-start:focus,\\n    .container .container_btn-clearTimeout:focus,\\n    .container .container_btn-newGame:focus {\\n      outline: 0; }\\n  .container .container_btn-clearTimeout {\\n    top: 30%; }\\n  .container .container_btn-newGame {\\n    top: 40%; }\\n  .container .container_money {\\n    width: 20%;\\n    font-size: 2rem;\\n    text-align: center;\\n    margin: 0 auto;\\n    color: white; }\\n  .container .container_timer {\\n    position: absolute;\\n    width: 250px;\\n    height: 250px;\\n    top: 10%;\\n    right: 5%;\\n    text-align: center;\\n    font-size: 1000%;\\n    color: white; }\\n  .container .container_screen {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    top: 10%;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    width: 50%;\\n    height: 40%;\\n    font-size: 1.5rem;\\n    color: white;\\n    border: grey solid 2px;\\n    background-color: black;\\n    overflow: hidden; }\\n    .container .container_screen .container_screen_question {\\n      display: none;\\n      margin: 0 20px;\\n      text-align: center; }\\n      .container .container_screen .container_screen_question:active {\\n        display: block; }\\n    .container .container_screen .container_screen_categories {\\n      display: flex;\\n      justify-content: space-around;\\n      align-items: center;\\n      flex-basis: 100%;\\n      height: 30%; }\\n      .container .container_screen .container_screen_categories .container_screen_categories_category {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        position: relative;\\n        top: 500%;\\n        width: 30%;\\n        height: 100%;\\n        border: 2px white solid;\\n        border-radius: 50%;\\n        background-color: #5e5c5c;\\n        cursor: pointer;\\n        transition: top 1s linear, left 1s linear, right 1s linear; }\\n        .container .container_screen .container_screen_categories .container_screen_categories_category:first-child {\\n          left: -100%; }\\n          .container .container_screen .container_screen_categories .container_screen_categories_category:first-child.animation {\\n            top: 0;\\n            left: 0; }\\n        .container .container_screen .container_screen_categories .container_screen_categories_category:last-child {\\n          right: -100%; }\\n          .container .container_screen .container_screen_categories .container_screen_categories_category:last-child.animation {\\n            top: 0;\\n            right: 0; }\\n        .container .container_screen .container_screen_categories .container_screen_categories_category:hover {\\n          color: #1a1313;\\n          background-color: #3f3e3e; }\\n  .container .container_answers {\\n    display: flex;\\n    justify-content: space-around;\\n    align-items: center;\\n    position: absolute;\\n    top: 60%;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    width: 80%;\\n    height: 30%;\\n    background-color: rgba(26, 5, 146, 0.363);\\n    border: 10px solid white; }\\n    .container .container_answers .container_answers_playerChoose {\\n      width: 20%;\\n      height: 50%;\\n      font-size: 2rem;\\n      text-align: center; }\\n      .container .container_answers .container_answers_playerChoose .container_answers_playerChoose_answer {\\n        width: 100%;\\n        height: 70%;\\n        color: white;\\n        background-color: #0b0b61;\\n        border: 1px solid white;\\n        font-size: 30px; }\\n      .container .container_answers .container_answers_playerChoose .container_answers_playerChoose_answer + input {\\n        width: 100%;\\n        background-color: #3f3b3b;\\n        color: white;\\n        border: none;\\n        text-align: right;\\n        font-size: 1.5rem; }\\n        .container .container_answers .container_answers_playerChoose .container_answers_playerChoose_answer + input:focus {\\n          outline: none; }\\n        .container .container_answers .container_answers_playerChoose .container_answers_playerChoose_answer + input[type=\'number\'] {\\n          -moz-appearance: textfield; }\\n        .container .container_answers .container_answers_playerChoose .container_answers_playerChoose_answer + input::-webkit-outer-spin-button, .container .container_answers .container_answers_playerChoose .container_answers_playerChoose_answer + input::-webkit-inner-spin-button {\\n          -webkit-appearance: none; }\\n", ""]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MjM1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(4);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === \'function\'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzP2Y2ZDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/scss/style.scss\nvar style = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/js/Category.js\nvar category = [\"Muzyka\", \"Film\", \"Sport\", \"Motoryzacja\", \"Praca\", \"Szkoła\", \"Świat\", \"Polska\", \"Sztuka\", \"Jedzenie\", \"Malarstwo\", \"Historia\", \"Seriale\", \"Programowanie\", \"Matematyka\", \"Książki\"];\n/* harmony default export */ var Category = (category);\n// CONCATENATED MODULE: ./src/js/DrawCategory.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar DrawCategory_DrawCategory =\n/*#__PURE__*/\nfunction () {\n  function DrawCategory() {\n    _classCallCheck(this, DrawCategory);\n\n    this.category = Category;\n    this.arrOfDrawnCategories = [];\n    console.log(this.category, this.arrOfDrawnCategories);\n  }\n\n  _createClass(DrawCategory, [{\n    key: \"drawTwoCategories\",\n    value: function drawTwoCategories() {\n      this.arrOfCategory = [];\n      this.counter = 0;\n\n      do {\n        this.drawn = Math.floor(Math.random() * this.category.length);\n        this.drawnCategory = this.category[this.drawn];\n\n        if (this.arrOfDrawnCategories.includes(this.drawnCategory) != true) {\n          this.arrOfDrawnCategories.push(this.drawnCategory);\n          this.arrOfCategory.push(this.drawnCategory);\n          this.counter++;\n        } else if (this.arrOfDrawnCategories.length == 16) {\n          this.counter = 2;\n        }\n      } while (this.counter != 2);\n\n      console.log(this.category, this.arrOfDrawnCategories);\n      return this.arrOfCategory;\n    }\n  }]);\n\n  return DrawCategory;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/Betting.js\nfunction Betting_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Betting_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Betting_createClass(Constructor, protoProps, staticProps) { if (protoProps) Betting_defineProperties(Constructor.prototype, protoProps); if (staticProps) Betting_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Betting =\n/*#__PURE__*/\nfunction () {\n  function Betting(yourMoneyToBet, money, inputsForBets) {\n    Betting_classCallCheck(this, Betting);\n\n    this.yourMoneyToBet = yourMoneyToBet;\n    this.money = money;\n    this.inputsForBets = inputsForBets;\n    this.show = this.show.bind(this);\n  }\n\n  Betting_createClass(Betting, [{\n    key: \"manageWithInputs\",\n    value: function manageWithInputs(trueOrFalse) {\n      var _this = this;\n\n      this.inputsForBets.forEach(function (input) {\n        if (trueOrFalse == false) {\n          input.disabled = trueOrFalse;\n          input.addEventListener('keydown', _this.show);\n        } else if (trueOrFalse == true) {\n          input.disabled = trueOrFalse;\n          input.removeEventListener('keydown', _this.show);\n        } else {\n          input.value = 0;\n        }\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show(e) {\n      switch (e.keyCode) {\n        case 38:\n          this.money.textContent == 0 ? event.preventDefault() : this.money.textContent -= 50000;\n          break;\n\n        case 40:\n          this.money.textContent == this.yourMoneyToBet ? event.preventDefault() : this.checkYouCanStillPlay(e.target.value);\n          break;\n\n        default:\n          event.preventDefault();\n          alert(\"ZŁY PRZYCISK\");\n      }\n    }\n  }, {\n    key: \"checkYouCanStillPlay\",\n    value: function checkYouCanStillPlay(e) {\n      if (e != 0) {\n        this.money.textContent = parseInt(this.money.textContent) + 50000;\n      }\n    }\n  }]);\n\n  return Betting;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/QuestionsAndAnswers.js\nvar questionsAndAnswers = {\n  Muzyka: [{\n    question: \"Piosenkę \\\"Chałupy Welcome to\\\" wykonywał:\",\n    answers: ['Zbigniew Wodecki', 'Krzysztof Krawczyk', 'Ryszard Rynkowski', 'Czesław Mozil'],\n    correctAnswer: 'Zbigniew Wodecki'\n  }, {\n    question: \"Którego z utworów nie wykonuje zespół The Beatles?\",\n    answers: ['Hey Jude', 'Here Comes the Sun', 'Twist and Shout', 'I Want to Break Free'],\n    correctAnswer: 'I Want to Break Free'\n  }],\n  Film: [{\n    question: \"W filmie \\\"Titanic\\\" Rose podróżuje statkiem w towarzystwie:\",\n    answers: ['Narzeczonego i matki', 'Narzeczonego i ojca', 'Z ojcem', 'Ojcem i siostrą'],\n    correctAnswer: 'Narzeczonego i matki'\n  }, {\n    question: \"Kim z zawodu jest główny bohater filmu 'Kiler' Juliusza Machulskiego?\",\n    answers: ['Cinkciarzem', 'Taksówkarzem', 'Policjantem', 'Dostawcą pizzy'],\n    correctAnswer: 'Taksówkarzem'\n  }],\n  Sport: [{\n    question: \"Najwięcej złotych medali w historii Igrzysk Olimpijskich zdobył:\",\n    answers: ['Łarysa Łatynia', 'Paavo Nurmi', 'Michael Phelps', 'Carl Lewis'],\n    correctAnswer: 'Michael Phelps'\n  }, {\n    question: \"Co NIE jest dyscypliną olimpijską?\",\n    answers: ['Łucznictwo', 'Hokej na trawie', 'Badminton', 'Baseball'],\n    correctAnswer: 'Baseball'\n  }],\n  Motoryzacja: [{\n    question: \"Co symbolizuje logo firmy Citroën?\",\n    answers: ['Świerki typowe dla Wogezów', 'Zazębienie daszkowe kół zębatych', 'Strzałki w górę - dążenie do perfekcji', 'Szewrony wskazujące na militarne powiązania firmy'],\n    correctAnswer: 'Zazębienie daszkowe kół zębatych'\n  }, {\n    question: \"Który samochód nazywany jest popularnie \\\"kaczką\\\"?\",\n    answers: ['Trabant 601', 'Fiat 500', 'Wartburg 312', 'Citroën 2CV'],\n    correctAnswer: 'Citroën 2CV'\n  }],\n  Praca: [{\n    question: \"Upychacz pasażerów, to zawód wykonywany w ..\",\n    answers: ['Chinach', 'Nowym Jorku', 'Japonii', 'Kazahstanie'],\n    correctAnswer: 'Japonii'\n  }, {\n    question: \"Czym zajmuje się topiarz?\",\n    answers: ['Bada poziom zaludnienia', 'Odlewa żelazo', 'Szyje kozaki', 'Testuje ser'],\n    correctAnswer: 'Odlewa żelazo'\n  }],\n  Szkoła: [{\n    question: \"W którym roku wprowadzono gimnazja?\",\n    answers: ['1987', '1990', '1994', '1999'],\n    correctAnswer: '1999'\n  }, {\n    question: \"Jaki przedmiot nie jest obowiazkowy na maturze?\",\n    answers: ['Polski', 'Matematyka', 'Angielski', 'Geografia'],\n    correctAnswer: 'Geografia'\n  }],\n  Świat: [{\n    question: \"Attyka, Epir, Tesalia, to regiony którego państwa?\",\n    answers: ['Hiszpanii', 'Grecji', 'Włoch', 'Turcji'],\n    correctAnswer: 'Grecji'\n  }, {\n    question: \"Do organizmów jednokomórkowych zaliczamy:\",\n    answers: ['Gąbki', 'Drożdże', 'Pierścienice', 'Nowotwory'],\n    correctAnswer: 'Drożdże'\n  }],\n  Polska: [{\n    question: \"Pierwszym królem Polski był:\",\n    answers: ['Mieszko I', 'Kazimierz I Odnowiciel', 'Kazimierz III Wielki', 'Bolesław Chrobry'],\n    correctAnswer: 'Bolesław Chrobry'\n  }, {\n    question: \"Przedstawicielem jakiej dynastii był Zygmunt August?\",\n    answers: ['Piastów', 'Jagiellonów', 'Wazów', 'Andegawenów'],\n    correctAnswer: 'Jagiellonów'\n  }],\n  Sztuka: [{\n    question: \"Który z muzyków nie należy do tzw. klasyków wiedeńskich?\",\n    answers: ['Joseph Haydn', 'Jan Sebastian Bach', 'Ludwig van Beethoven', 'Wolfgang Amadeus Mozart'],\n    correctAnswer: 'Jan Sebastian Bach'\n  }, {\n    question: \"Kto jest twórcą rzeźby \\\"Myśliciel\\\"?\",\n    answers: ['Myron', 'Henry Moore', 'Antonio Canova', 'Auguste Rodin'],\n    correctAnswer: 'Auguste Rodin'\n  }],\n  Jedzenie: [{\n    question: \"Bryzol to gatunek ?\",\n    answers: ['Mięsa', 'Sera oscypka', 'Kiełbasy', 'Knedla zawijańca'],\n    correctAnswer: 'Mięsa'\n  }, {\n    question: \"Co to jest Fufu?\",\n    answers: ['Japoński deser', 'Wietnamska zupa', 'Afrykańska potrawa', 'Mongolska kiełbasa'],\n    correctAnswer: 'Afrykańska potrawa'\n  }],\n  Malarstwo: [{\n    question: \"Cyjan - to odcień którego koloru?\",\n    answers: ['Niebieskiego', 'Brązowego', 'Czerwonego', 'Zielonego'],\n    correctAnswer: 'Niebieskiego'\n  }, {\n    question: \"Który kwiat trzyma w dłoni Madonna na słynnym obrazie Leonarda da Vinci?\",\n    answers: ['Tulipan', 'Róża', 'Dalia', 'Goździk'],\n    correctAnswer: 'Goździk'\n  }],\n  Historia: [{\n    question: \"Która z bitew kampanii wrześniowej została nazwana \\\"polskimi Termopilami\\\"\",\n    answers: ['Bitwa pod Krasnymstawem', 'Obrona Przemyśla', 'Obrona Wizny', 'Szarża pod Wólką Węglową'],\n    correctAnswer: 'Obrona Wizny'\n  }, {\n    question: \"W którym roku powstało Księstwo Warszawskie?\",\n    answers: ['W 1807', 'W 1896', 'W 1900', 'W 1859'],\n    correctAnswer: 'W 1807'\n  }],\n  Seriale: [{\n    question: \"Która postać z anime/mangi została zainspirowana postacią Sun Wukonga fikcyjną postacią z mitologii chińskiej?\",\n    answers: ['Sasuke', 'Monkey D. Luffy', 'Son Goku', 'Naruto'],\n    correctAnswer: 'Son Goku'\n  }, {\n    question: \"Wzrost zainteresowania, jakim narkotykiem związany jest z pojawieniem się amerykańskiego serialu \\\"Breaking Bad\\\" ?\",\n    answers: ['Meskaliną', 'Amfetaminą', 'Metamfetaminą', 'Speedballem'],\n    correctAnswer: 'Metamfetaminą'\n  }],\n  Programowanie: [{\n    question: \"JavaScript po stronie serwera to..\",\n    answers: ['node.js', 'PHP', 'Ruby', 'C#'],\n    correctAnswer: 'node.js'\n  }, {\n    question: \"Zmienna typu const to zmienna..\",\n    answers: ['Ujemna', 'Zmiennoprzecinkowa', 'Podwójnej precyzji', 'Stała'],\n    correctAnswer: 'Stała'\n  }],\n  Matematyka: [{\n    question: \"Kto wprowadził do zapisu matematycznego znak równości \\\"=\\\"?\",\n    answers: ['Euklides z Aleksandrii', 'Robert Recorde', 'Leonhard Euler', 'Simon Stevin'],\n    correctAnswer: 'Robert Recorde'\n  }, {\n    question: \"Einstein urodził się w dzień liczby Pi (14 Marca), a który wielki uczony zmarł w tym dniu?\",\n    answers: ['Jan Heweliusz', 'Issac Newton', 'Blaise Pascal', 'Stephen Hawking'],\n    correctAnswer: 'Stephen Hawking'\n  }],\n  Książki: [{\n    question: \"Dmitrij Głuchowski urodził się w \",\n    answers: ['Moskwie', 'Kopenhadze', 'Pradze', 'Berlinie'],\n    correctAnswer: 'Moskwie'\n  }, {\n    question: \"W którym roku urodził się Stephen King ?\",\n    answers: ['1944', '1945', '1946', '1947'],\n    correctAnswer: '1947'\n  }]\n};\n/* harmony default export */ var QuestionsAndAnswers = (questionsAndAnswers);\n// CONCATENATED MODULE: ./src/js/DrawQuestionAndShowAnswers.js\nfunction DrawQuestionAndShowAnswers_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DrawQuestionAndShowAnswers_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DrawQuestionAndShowAnswers_createClass(Constructor, protoProps, staticProps) { if (protoProps) DrawQuestionAndShowAnswers_defineProperties(Constructor.prototype, protoProps); if (staticProps) DrawQuestionAndShowAnswers_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar DrawQuestionAndShowAnswers_DrawQuestionAndShowAnswers =\n/*#__PURE__*/\nfunction () {\n  function DrawQuestionAndShowAnswers(chosenCategory, containerForAnswers) {\n    DrawQuestionAndShowAnswers_classCallCheck(this, DrawQuestionAndShowAnswers);\n\n    this.chosenCategory = chosenCategory;\n    this.containerForAnswers = containerForAnswers;\n    this.questionsAndAnswers = QuestionsAndAnswers;\n    this.questionsFromTheCategory = this.questionsAndAnswers[this.chosenCategory];\n  }\n\n  DrawQuestionAndShowAnswers_createClass(DrawQuestionAndShowAnswers, [{\n    key: \"drawQuestion\",\n    value: function drawQuestion() {\n      this.drawNumberOfQuestion = Math.floor(Math.random() * this.questionsFromTheCategory.length);\n      return [this.questionsFromTheCategory[this.drawNumberOfQuestion].correctAnswer, this.questionsFromTheCategory[this.drawNumberOfQuestion].question];\n    }\n  }, {\n    key: \"changeAnswersTextContent\",\n    value: function changeAnswersTextContent(showOrHide) {\n      var _this = this;\n\n      this.containerForAnswers.forEach(function (answer, index) {\n        if (showOrHide == true) {\n          setTimeout(function () {\n            answer.textContent = _this.questionsFromTheCategory[_this.drawNumberOfQuestion].answers[index];\n          }, index * 500);\n        } else {\n          answer.textContent = \"\";\n        }\n      });\n    }\n  }]);\n\n  return DrawQuestionAndShowAnswers;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/Timer.js\nfunction Timer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Timer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Timer_createClass(Constructor, protoProps, staticProps) { if (protoProps) Timer_defineProperties(Constructor.prototype, protoProps); if (staticProps) Timer_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Timer =\n/*#__PURE__*/\nfunction () {\n  function Timer(timer, timeForChose) {\n    Timer_classCallCheck(this, Timer);\n\n    this.timer = timer;\n    this.timeForChose = timeForChose;\n  }\n\n  Timer_createClass(Timer, [{\n    key: \"countdown\",\n    value: function countdown() {\n      var _this = this;\n\n      this.timer.style.color = \"white\";\n      this.currentTime = this.timeForChose;\n      this.timer.textContent = this.currentTime;\n      this.time = setInterval(function () {\n        _this.currentTime--;\n        _this.timer.textContent = _this.currentTime;\n\n        if (_this.currentTime == 10) {\n          _this.timer.style.color = \"red\";\n        }\n\n        if (_this.currentTime == 0) {\n          _this.clearCountdown();\n        }\n\n        return _this.currentTime;\n      }, 1000);\n    }\n  }, {\n    key: \"clearCountdown\",\n    value: function clearCountdown() {\n      clearInterval(this.time);\n      this.timer.textContent = null;\n    }\n  }]);\n\n  return Timer;\n}();\n\n\n// CONCATENATED MODULE: ./src/index.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction src_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction src_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction src_createClass(Constructor, protoProps, staticProps) { if (protoProps) src_defineProperties(Constructor.prototype, protoProps); if (staticProps) src_defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar startGameBet = function startGameBet() {\n  var gameBet = new src_GameBetOnAMilion(1000000);\n  gameBet.drawCategory();\n  btn_start.removeEventListener(\"click\", startGameBet);\n  var btn_newGame = document.querySelector(\".container_btn-newGame\");\n  btn_newGame.addEventListener(\"click\", newGame);\n};\n\nvar newGame = function newGame() {\n  location.reload(true);\n};\n\nvar btn_start = document.querySelector(\".container_btn-start\");\nbtn_start.addEventListener(\"click\", startGameBet);\n\nvar src_GameBetOnAMilion =\n/*#__PURE__*/\nfunction () {\n  function GameBetOnAMilion(yourMoneyToBet) {\n    var _this = this;\n\n    src_classCallCheck(this, GameBetOnAMilion);\n\n    this.yourMoneyToBet = yourMoneyToBet;\n    this.questionCounter = 1;\n    this.drawCategoryClassInstance = new DrawCategory_DrawCategory();\n    this.containersOfCategories = _toConsumableArray(document.querySelectorAll(\".container_screen_categories_category\"));\n    this.takeBtnValueAndCallFunctions = this.takeBtnValueAndCallFunctions.bind(this);\n    this.containersOfCategories.forEach(function (category) {\n      return category.addEventListener(\"click\", _this.takeBtnValueAndCallFunctions);\n    });\n    this.resetTimer = this.resetTimer.bind(this);\n    this.btnToResetTimer = document.querySelector(\".container_btn-clearTimeout\");\n    this.btnToResetTimer.addEventListener(\"click\", this.resetTimer);\n    this.timer = document.querySelector(\".container_timer\");\n    this.timeForChose = 60;\n    this.timerClassInstance = new Timer(this.timer, this.timeForChose);\n    this.money = document.querySelector(\".container_money\");\n    this.money.textContent = this.yourMoneyToBet;\n    this.inputsForBets = document.querySelectorAll(\".container_answers_playerChoose_answer+input\");\n    this.containerForAnswers = document.querySelectorAll(\".container_answers_playerChoose_answer\");\n    this.containerForQuestion = document.querySelector(\".container_screen_question\");\n    this.containerForCategory = document.querySelector(\".container_screen_categories\");\n  }\n\n  src_createClass(GameBetOnAMilion, [{\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      clearTimeout(this.setTimeoutInGameBetOnAMilion);\n      this.timerClassInstance.clearCountdown();\n      this.checkAnswers();\n    }\n  }, {\n    key: \"checkHowManyWon\",\n    value: function checkHowManyWon() {\n      var _this2 = this;\n\n      this.changeDisplay(\"flex\", \"none\");\n      this.containerForAnswers.forEach(function (answer) {\n        if (answer.textContent == _this2.returnOfDrawQuestion[0]) {\n          _this2.correctChoice = answer.nextSibling;\n          _this2.yourMoneyToBet = _this2.correctChoice.value;\n          _this2.money.textContent = _this2.yourMoneyToBet;\n\n          if (_this2.questionCounter != 8 && _this2.yourMoneyToBet != 0) {\n            alert(\"Poprawna odpowied\\u017A to \".concat(_this2.returnOfDrawQuestion[0], \" i  wygra\\u0142e\\u015B \").concat(_this2.yourMoneyToBet));\n\n            _this2.drawCategory();\n          } else {\n            if (_this2.yourMoneyToBet != 0 && _this2.questionCounter == 8) {\n              alert(\"Gratulacje! Wygra\\u0142e\\u015B \".concat(_this2.yourMoneyToBet));\n            } else {\n              alert(\"Niestety nie uda\\u0142o Ci si\\u0119 wygra\\u0107 :( Poprawna odpowied\\u017A to: \".concat(_this2.returnOfDrawQuestion[0]));\n            }\n          }\n\n          _this2.questionCounter++;\n\n          _this2.bettingClassInstance.manageWithInputs();\n\n          _this2.drawQuestionClassInstance.changeAnswersTextContent();\n        }\n      });\n    }\n  }, {\n    key: \"changeDisplay\",\n    value: function changeDisplay(categoryDisplay, questionDisplay) {\n      this.containerForCategory.style.display = categoryDisplay;\n      this.containerForQuestion.style.display = questionDisplay;\n    }\n  }, {\n    key: \"startTheCountdown\",\n    value: function startTheCountdown() {\n      var _this3 = this;\n\n      this.timerClassInstance.countdown();\n      this.setTimeoutInGameBetOnAMilion = setTimeout(function () {\n        if (_this3.timer.textContent == 0) {\n          _this3.checkAnswers();\n        }\n      }, this.timeForChose * 1000);\n    }\n  }, {\n    key: \"checkAnswers\",\n    value: function checkAnswers() {\n      this.bettingClassInstance.manageWithInputs(true);\n      this.checkHowManyWon();\n    }\n  }, {\n    key: \"takeBtnValueAndCallFunctions\",\n    value: function takeBtnValueAndCallFunctions(e) {\n      this.btn_Category = e.target.textContent;\n      this.callADrawQuestionInstance(this.btn_Category);\n      this.callABettingInstance();\n      this.showOrHideCategory();\n    }\n  }, {\n    key: \"callADrawQuestionInstance\",\n    value: function callADrawQuestionInstance(btn) {\n      var _this4 = this;\n\n      this.drawQuestionClassInstance = new DrawQuestionAndShowAnswers_DrawQuestionAndShowAnswers(btn, this.containerForAnswers);\n      this.returnOfDrawQuestion = this.drawQuestionClassInstance.drawQuestion();\n      setTimeout(function () {\n        _this4.changeDisplay(\"none\", \"block\");\n\n        _this4.containerForQuestion.textContent = _this4.returnOfDrawQuestion[1];\n        setTimeout(function () {\n          _this4.drawQuestionClassInstance.changeAnswersTextContent(true);\n\n          setTimeout(function () {\n            _this4.bettingClassInstance.manageWithInputs(false);\n\n            _this4.startTheCountdown();\n          }, 2000);\n        }, 1000);\n      }, 1000);\n    }\n  }, {\n    key: \"callABettingInstance\",\n    value: function callABettingInstance() {\n      this.bettingClassInstance = new Betting(this.yourMoneyToBet, this.money, this.inputsForBets);\n    }\n  }, {\n    key: \"drawCategory\",\n    value: function drawCategory() {\n      this.drawnCategories = this.drawCategoryClassInstance.drawTwoCategories();\n      this.showOrHideCategory();\n    }\n  }, {\n    key: \"showOrHideCategory\",\n    value: function showOrHideCategory() {\n      var _this5 = this;\n\n      this.containersOfCategories.forEach(function (category, index) {\n        category.classList.toggle(\"animation\");\n        category.textContent = _this5.drawnCategories[index];\n      });\n    }\n  }]);\n\n  return GameBetOnAMilion;\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")}]);